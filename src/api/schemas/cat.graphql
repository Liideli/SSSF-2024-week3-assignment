# TODO: create graphql schema for cat. Example type definitions:
# Cat: id, cat_name, weight, birthdate, owner, location, filename
# Location: type, coordinates
# Coordinates: lat, lng
# LocationInput: type, coordinates
# Query: catById, cats, catsByArea, catsByOwner
# Mutation: createCat, updateCat, deleteCat

scalar DateTime
type Cat {
  id: ID
  cat_name: String
  weight: Int
  birthdate: DateTime
  location: String
  owner: ID
}

type Point {
  type: GeoJSONPointType
  coordinates: [Float]
}

enum GeoJSONPointType {
  Point
}

type Query {
  cats: [Cat]
  catById(id: ID!): Cat
  catsByArea(area: String!): [Cat]
  catsByOwner(owner: ID!): [Cat]
}

input CatInput {
  cat_name: String!
  weight: Int!
  birthdate: DateTime!
  location: PointInput!
  owner: ID!
}

input CatModifyInput {
  cat_name: String
  weight: Int
  birthdate: DateTime
  location: PointInput
  owner: ID
}

input PointInput {
  type: GeoJSONPointType!
  """
  Coordinates must be in the format [longitude, latitude]
  """
  coordinates: [Float]!
}

type catMessage {
  message: String!
  cat: Cat
}

type Mutation {
  createCat(cat: CatInput): catMessage
  updateCat(id: ID!, cat: CatModifyInput): catMessage
  deleteCat(id: ID!): catMessage
}